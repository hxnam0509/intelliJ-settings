<templateSet group="JavaScript">
  <template name="ready" value="$(function(){&#10;$VAR$&#10;});" description="jQuery ready function" toReformat="true" toShortenFQNames="true">
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="selector" value="$(&quot;$VAR$&quot;)" description="$(...)" toReformat="false" toShortenFQNames="true">
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="us" value="&quot;use strict&quot;;$END$" description="Inserts 'use strict' statement" toReformat="true" toShortenFQNames="true">
    <context />
  </template>
  <template name="it" value="it(&quot;$STR$&quot;, () =&gt; {&#10;    $END$&#10;});" description="test case in Jasmine" toReformat="true" toShortenFQNames="true">
    <variable name="STR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="describe" value="describe(&quot;$STR$&quot;, () =&gt; {&#10;    $END$&#10;});" description="test suite in Jasmine" toReformat="true" toShortenFQNames="true">
    <variable name="STR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="toHaveBeenCalled" value="expect($VAR$).toHaveBeenCalled();" description="expect....toHaveBeenCalled()" toReformat="true" toShortenFQNames="true">
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="beforeEach" value="beforeEach(() =&gt; {&#10;    $END$&#10;});" description="beforeEach jasmine" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="afterEach" value="afterEach(() =&gt; {&#10;    $END$&#10;});" description="afterEach jasmine" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="for loop" value="for ($VAR$ = 0; $VAR$ &lt; $items$.length; $VAR$ += 1) {&#10;    $END$&#10;}" description="for loop" toReformat="true" toShortenFQNames="true">
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="items" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="debugger" value="debugger;" description="debugger;" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="debug log" value="console.debug($END$);" description="console.debug" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="ts ignore" value="// @ts-ignore" description="// @ts-ignore" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="arrow function" value="($PARAM$) =&gt; {&#10;    $END$&#10;}" description="() =&gt; {}" toReformat="false" toShortenFQNames="true">
    <variable name="PARAM" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="full function" value="function $NAME$($PARAM$) {&#10;    $END$&#10;}" description="function () {}" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PARAM" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="arrow func return" value="($PARAM$) =&gt; $END$" description="() =&gt; ?" toReformat="false" toShortenFQNames="true">
    <variable name="PARAM" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="import React" value="import React from 'react';" description="import react" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="import i18n" value="import { I18n } from '@atlassian/wrm-react-i18n';" description="import I18n" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="export default function" value="export default () =&gt; {&#10;    $END$&#10;}" description="export default function" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="declare arrow function" value="const $FUNC$ = ($PARAM$) =&gt; {&#10;    $END$&#10;}" description="const Fn = () =&gt; {}" toReformat="false" toShortenFQNames="true">
    <variable name="FUNC" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PARAM" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="declare arrow func return" value="const $FUNC$ = ($PARAM$) =&gt; $END$" description="const Fn = () =&gt; ?" toReformat="false" toShortenFQNames="true">
    <variable name="FUNC" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PARAM" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="importitems" value="import {$ITEM$$END$} from &quot;$MODULE$&quot;;&#10;" description="import {b} from 'a'" toReformat="true" toShortenFQNames="true">
    <variable name="MODULE" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <variable name="ITEM" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context />
  </template>
  <template name="importns" value="import * as $ITEM$ from &quot;$MODULE$&quot;;&#10;$END$" description="import * as b from 'a'" toReformat="true" toShortenFQNames="true">
    <variable name="MODULE" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <variable name="ITEM" expression="jsSuggestImportedEntityName()" defaultValue="Namespace" alwaysStopAt="true" />
    <context />
  </template>
  <template name="importdefault" value="import $ITEM$ from &quot;$MODULE$&quot;;&#10;$END$" description="import b from 'a'" toReformat="true" toShortenFQNames="true">
    <variable name="MODULE" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <variable name="ITEM" expression="jsSuggestImportedEntityName()" defaultValue="Namespace" alwaysStopAt="true" />
    <context />
  </template>
  <template name="exportall" value="export * from &quot;$MODULE$&quot;;&#10;$END$" description="export * from 'a'" toReformat="true" toShortenFQNames="true">
    <variable name="MODULE" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context />
  </template>
  <template name="exportfrom" value="export {$ITEM$$END$} from &quot;$MODULE$&quot;;&#10;" description="export {b} from 'a'" toReformat="true" toShortenFQNames="true">
    <variable name="MODULE" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <variable name="ITEM" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context />
  </template>
  <template name="exportitems" value="export {$ITEM$$END$};&#10;" description="export {b}" toReformat="true" toShortenFQNames="true">
    <variable name="ITEM" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context />
  </template>
  <template name="class function" value="$FUNC$ = ($PARAM$) =&gt; {&#10;    $END$&#10;}" description="a = () =&gt; {}" toReformat="false" toShortenFQNames="true">
    <variable name="FUNC" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PARAM" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="object destructuring" value="const {$END$} = $VAR$;" description="const {...} = ?" toReformat="false" toShortenFQNames="true">
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="array destructuring" value="const [$END$] =$VAR$;" description="const [...] = ?" toReformat="false" toShortenFQNames="true">
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="error" value="console.error($END$)" description="console.error()" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="ts nocheck" value="// @ts-nocheck" description="// @ts-nocheck" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="log" value="console.log($END$)" description="console.log()" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="info" value="console.info($END$)" description="console.info()" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
</templateSet>